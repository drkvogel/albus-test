import Head from 'next/head'
// import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState, useEffect, useRef } from 'react'

const inter = Inter({ subsets: ['latin'] })

// TODO: get key from env, not hardcode
const apiKey: string = "NfO8LdX0HmFOokLomziuscOyczIpZFp6FQvnOAAm"       // Freecurrencyapi.com API key
const apiEndpoint: string = "https://api.freecurrencyapi.com/v1/latest" // Freecurrencyapi.com endpoint

const log = (msg: string) => {
  console.log(new Date().toUTCString() + ": " + msg)
}

function getRates() {
  log("getRates")

  fetch(apiEndpoint + "?apikey=" + apiKey, {
    method: "GET",
    headers: {
        'Accept': 'application/json',
    },
  })
  .then((res) => {
    if (res.ok) {
      return res.json()
    }
    throw new Error("API response: status: " + res.status); //  + res.text()
  })
  .then((data) => {
    setRates(data)
  })
  .catch((error) => {
    console.log(error)
    alert(error)

    // try to get cached exchange rates
    if (typeof window !== 'undefined') {
      const rates = localStorage.getItem("rates");
      log("rates from localStorage: " + rates)
      if (rates !== null) {
        setRates(JSON.parse(rates))
      } else {
        alert("Exchange rates fetch failed and there are no cached exchange rates, sorry!")
      }
    }
  });
  // TODO improve error handling, error message
}

function setRates(data: JSON) {
  log(JSON.stringify(data))

  localStorage.setItem("rates", JSON.stringify(data))
}

export default function Home() {
  const dataFetchedRef = useRef(false);

  useEffect(() => {
    log("useEffect")
    if (dataFetchedRef.current) return;
    dataFetchedRef.current = true;
    getRates()
  }, [])

  return (
    <>
      <Head>
        <title>Currency Converter</title>
        <meta name="description" content="A simple browser-based Currency Converter in Next.JS. Initially generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.center}>
          <p className={inter.className}>Currency Converter</p>
        </div>
        <div className={styles.description}>
          A simple browser-based Currency Converter
        </div>
      </main>
    </>
  )
}
